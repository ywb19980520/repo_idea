<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!--中文乱码的过滤器(tomcat8没有解决post请求的乱码问题)-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <!--配置属性设置为utf-8-->
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <!--拦截所有-->
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <!--前端控制器-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!--配置初始化参数-->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <!--传入spring-mvc的配置文件,让其加载-->
            <param-value>classpath:spring-mvc.xml</param-value>
        </init-param>
        <!--表示该服务器启动时就将会对该servlet进行实例化,初始化操作(初始化时就会对spring-mvc的配置文件进行加载)-->
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
        <!--拦截所有除页面访问的请求-->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!--spring监听器contextLoaderListener:监听到servlet context对象创建,会加载本层包的spring配置文件-->
    <listener>
        <!--监听ContextLoader的创建,也同时服务器启动时创建
        让后我们配置context-param 初始化参数时 加载spring核心配置文件-->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <!--被加载同时加载其它层的全部配置文件-->
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <!--跨域过滤器-->
    <filter>
        <filter-name>corsFilter</filter-name>
        <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>corsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>